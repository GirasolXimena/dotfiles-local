ZSH_THEME="powerlevel10k/powerlevel10k"
ZSH_CUSTOM=$HOME/dotfiles-local/zsh_custom
ZSH_DISABLE_COMPFIX=true  
DEFAULT_USER=`whoami`
plugins=(git colorize osx tmux tmuxinator node npm nvm bundler
vi-mode zsh-syntax-highlighting colored-man-pages)
export ZSH=$HOME/dotfiles-local/oh-my-zsh
source $ZSH/oh-my-zsh.sh
export VIRTUAL_ENV_DISABLE_PROMPT=
export LC_CTYPE=en_GB.UTF-8
export TERM="xterm-256color"
export ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern cursor line)
export ANDROID_HOME=/usr/local/share/android-sdk
case `uname` in
  Darwin)
    # commands for OS X go here
    source ~/.iterm2_shell_integration.zsh
  ;;
  Linux)
    # commands for Linux go here
  ;;
esac
export PATH=".git/safe/../../bin:/Users/randrade/.bin:/usr/local/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/MAMP/Library/bin:/Users/randrade/.composer/vendor/bin:function hs() {: ( cd ~/Document/Projects/homestead && vagrant $* ):}:/usr/local/share/dotnet:/usr/local/mysql/bin:~/.dotnet/tools:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/Users/randrade/.vimpkg/bin"
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
export PATH="$HOME/.bin:$PATH"
#fzf source
  [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
  export NVM_DIR="$HOME/.nvm"
  [ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
  [ -s "/usr/local/opt/nvm/etc/bash_completion.d/nvm" ] && . "/usr/local/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

  # place this after nvm initialization!
  # auto load nvm version
autoload -U add-zsh-hook
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc
